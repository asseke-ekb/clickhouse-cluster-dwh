version: '3.8'

volumes:
  prometheus-data:
  grafana-data:

services:
  # ==================== HAProxy Load Balancer ====================
  haproxy:
    image: haproxy:2.8
    container_name: haproxy
    hostname: haproxy
    network_mode: host
    volumes:
      # Конфигурация HAProxy (скопировать из shared-configs)
      - /opt/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "haproxy", "-c", "-f", "/usr/local/etc/haproxy/haproxy.cfg"]
      interval: 10s
      timeout: 5s
      retries: 3

  # ==================== Prometheus ====================
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    hostname: prometheus
    network_mode: host
    volumes:
      # Конфигурация Prometheus (скопировать из shared-configs)
      - /opt/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - /opt/prometheus/alerts:/etc/prometheus/alerts:ro
      # Persistent data
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: unless-stopped

  # ==================== Grafana ====================
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    hostname: grafana
    network_mode: host
    volumes:
      - grafana-data:/var/lib/grafana
      # Provisioning (опционально, для автоматической настройки datasources)
      - /opt/grafana/provisioning:/etc/grafana/provisioning:ro
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin123
      GF_INSTALL_PLUGINS: grafana-clickhouse-datasource
      GF_SERVER_ROOT_URL: http://localhost:3000
      GF_USERS_ALLOW_SIGN_UP: false
    restart: unless-stopped
