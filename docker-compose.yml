version: '3.8'

networks:
  clickhouse-net:
    driver: bridge

volumes:
  clickhouse-01-data:
  clickhouse-02-data:
  clickhouse-03-data:
  zookeeper-01-data:
  zookeeper-02-data:
  zookeeper-03-data:
  prometheus-data:
  grafana-data:

services:
  # ==================== ZooKeeper Cluster ====================
  zookeeper-01:
    image: zookeeper:3.8
    container_name: zookeeper-01
    hostname: zookeeper-01
    networks:
      - clickhouse-net
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper-01:2888:3888;2181 server.2=zookeeper-02:2888:3888;2181 server.3=zookeeper-03:2888:3888;2181
      ZOO_TICK_TIME: 2000
      ZOO_INIT_LIMIT: 10
      ZOO_SYNC_LIMIT: 5
      ZOO_MAX_CLIENT_CNXNS: 0
    volumes:
      - zookeeper-01-data:/data
      - ./logs/zookeeper-01:/datalog
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "zkServer.sh", "status"]
      interval: 10s
      timeout: 5s
      retries: 3

  zookeeper-02:
    image: zookeeper:3.8
    container_name: zookeeper-02
    hostname: zookeeper-02
    networks:
      - clickhouse-net
    ports:
      - "2182:2181"
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zookeeper-01:2888:3888;2181 server.2=zookeeper-02:2888:3888;2181 server.3=zookeeper-03:2888:3888;2181
      ZOO_TICK_TIME: 2000
      ZOO_INIT_LIMIT: 10
      ZOO_SYNC_LIMIT: 5
      ZOO_MAX_CLIENT_CNXNS: 0
    volumes:
      - zookeeper-02-data:/data
      - ./logs/zookeeper-02:/datalog
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "zkServer.sh", "status"]
      interval: 10s
      timeout: 5s
      retries: 3

  zookeeper-03:
    image: zookeeper:3.8
    container_name: zookeeper-03
    hostname: zookeeper-03
    networks:
      - clickhouse-net
    ports:
      - "2183:2181"
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zookeeper-01:2888:3888;2181 server.2=zookeeper-02:2888:3888;2181 server.3=zookeeper-03:2888:3888;2181
      ZOO_TICK_TIME: 2000
      ZOO_INIT_LIMIT: 10
      ZOO_SYNC_LIMIT: 5
      ZOO_MAX_CLIENT_CNXNS: 0
    volumes:
      - zookeeper-03-data:/data
      - ./logs/zookeeper-03:/datalog
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "zkServer.sh", "status"]
      interval: 10s
      timeout: 5s
      retries: 3

  # ==================== ClickHouse Node 01 ====================
  clickhouse-01:
    image: clickhouse/clickhouse-server:24.3
    container_name: clickhouse-01
    hostname: clickhouse-01
    networks:
      - clickhouse-net
    ports:
      - "8123:8123"
      - "9000:9000"
      - "9363:9363"
    volumes:
      - clickhouse-01-data:/var/lib/clickhouse
      - ./config/clickhouse-01:/etc/clickhouse-server/config.d
      - ./config/users.xml:/etc/clickhouse-server/users.d/users.xml
      - ./logs/clickhouse-01:/var/log/clickhouse-server
    environment:
      CLICKHOUSE_DB: default
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    depends_on:
      zookeeper-01:
        condition: service_healthy
      zookeeper-02:
        condition: service_healthy
      zookeeper-03:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "clickhouse-client", "--query", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ==================== ClickHouse Node 02 ====================
  clickhouse-02:
    image: clickhouse/clickhouse-server:24.3
    container_name: clickhouse-02
    hostname: clickhouse-02
    networks:
      - clickhouse-net
    ports:
      - "8124:8123"
      - "9001:9000"
      - "9364:9363"
    volumes:
      - clickhouse-02-data:/var/lib/clickhouse
      - ./config/clickhouse-02:/etc/clickhouse-server/config.d
      - ./config/users.xml:/etc/clickhouse-server/users.d/users.xml
      - ./logs/clickhouse-02:/var/log/clickhouse-server
    environment:
      CLICKHOUSE_DB: default
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    depends_on:
      zookeeper-01:
        condition: service_healthy
      zookeeper-02:
        condition: service_healthy
      zookeeper-03:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "clickhouse-client", "--query", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ==================== ClickHouse Node 03 ====================
  clickhouse-03:
    image: clickhouse/clickhouse-server:24.3
    container_name: clickhouse-03
    hostname: clickhouse-03
    networks:
      - clickhouse-net
    ports:
      - "8125:8123"
      - "9002:9000"
      - "9365:9363"
    volumes:
      - clickhouse-03-data:/var/lib/clickhouse
      - ./config/clickhouse-03:/etc/clickhouse-server/config.d
      - ./config/users.xml:/etc/clickhouse-server/users.d/users.xml
      - ./logs/clickhouse-03:/var/log/clickhouse-server
    environment:
      CLICKHOUSE_DB: default
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    depends_on:
      zookeeper-01:
        condition: service_healthy
      zookeeper-02:
        condition: service_healthy
      zookeeper-03:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "clickhouse-client", "--query", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ==================== HAProxy Load Balancer ====================
  haproxy:
    image: haproxy:2.8
    container_name: haproxy
    hostname: haproxy
    networks:
      - clickhouse-net
    ports:
      - "8080:8080"  # ETL endpoint
      - "8081:8081"  # Analytics endpoint
      - "8082:8082"  # Reports endpoint
      - "9090:9090"  # TCP ETL endpoint
      - "9091:9091"  # TCP Analytics endpoint
      - "8404:8404"  # Stats UI
    volumes:
      - ./config/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    depends_on:
      clickhouse-01:
        condition: service_healthy
      clickhouse-02:
        condition: service_healthy
      clickhouse-03:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "haproxy", "-c", "-f", "/usr/local/etc/haproxy/haproxy.cfg"]
      interval: 10s
      timeout: 5s
      retries: 3

  # ==================== Prometheus ====================
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    hostname: prometheus
    networks:
      - clickhouse-net
    ports:
      - "9099:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    depends_on:
      - clickhouse-01
      - clickhouse-02
      - clickhouse-03
    restart: unless-stopped

  # ==================== Grafana ====================
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    hostname: grafana
    networks:
      - clickhouse-net
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin123
      GF_INSTALL_PLUGINS: grafana-clickhouse-datasource
      GF_SERVER_ROOT_URL: http://localhost:3000
      GF_USERS_ALLOW_SIGN_UP: false
    depends_on:
      - prometheus
    restart: unless-stopped